name: Tests

on:
  push:
    branches:
      - master
    tags:
      - v[0-9].*
  pull_request:
    branches:
      - master

defaults:
  run:
    # The default shell must be set like this so that bash will source the
    # profile, which contains settings initialized by Conda:
    # https://github.com/marketplace/actions/setup-miniconda#important
    shell: bash -el {0}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    env:
      # Skip pylint since not all of our code passes pylint.
      # TODO (btjanaka): Remove isort and ruff-format and format the whole codebase.
      SKIP: pylint, isort, ruff-format
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.12"
      - name: Install all deps and pylint (to be available to pre-commit)
        run: pip install .[all] pylint
      - uses: pre-commit/action@v3.0.0
  test:
    strategy:
      max-parallel: 12 # All in parallel.
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install core deps
        run: pip install .[dev]
      - name: Test core
        run: >
          pytest tests/archives tests/emitters tests/schedulers
      - name: Install visualize dep
        run: pip install .[visualize]
      - name: Test visualize extra
        run: pytest tests/visualize
      - name: Install cma
        run: pip install cma
      - name: Test cma extra
        run: pytest tests/emitters_pycma
      - name: Install pymoo
        run: pip install pymoo
      - name: Test pymoo extra
        run: pytest tests/emitters_pymoo tests/schedulers_pymoo
  visualize_qdax:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.12"
      - name: Install deps
        run: pip install .[visualize,dev]
      - name: Install QDax
        run: pip install qdax matplotlib==3.10.1
      - name: Test visualize extra for QDax
        run: pytest tests/visualize_qdax
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.12"
      - name: Install deps
        run: pip install .[all,dev]
      - name: Test coverage
        env:
          NUMBA_DISABLE_JIT: 1
        # Exclude `visualize_qdax` since we don't install QDax here. We also
        # exclude `tests` since we don't want the base directory here.
        run:
          pytest $(find tests -maxdepth 1 -type d -not -name 'tests' -not -name
          'visualize_qdax')
  benchmarks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.12"
      - name: Install deps
        run: pip install .[visualize,dev]
      - name: Run benchmarks
        run: pytest -c pytest_benchmark.ini tests
  examples:
    runs-on: ubuntu-latest
    steps:
      # SWIG should not be installed so that we can test that lunar lander is
      # installing SWIG properly. See https://github.com/icaros-usc/pyribs/pull/366
      - name: Remove swig
        run: sudo apt-get remove swig
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.12"
      - name: Install deps
        run: pip install .[visualize]
      - name: Test Examples
        run: bash tests/examples.sh
  tutorials_list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          echo "$(bash tests/tutorials_list.sh)" >> $GITHUB_OUTPUT
  tutorials:
    runs-on: ubuntu-latest
    needs: tutorials_list
    strategy:
      matrix: ${{ fromJSON(needs.tutorials_list.outputs.matrix) }}
    steps:
      # SWIG should not be installed so that we can test that lunar lander is
      # installing SWIG properly. See https://github.com/icaros-usc/pyribs/pull/366
      - name: Remove swig
        run: sudo apt-get remove swig
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.10"
      - name: Install deps
        run: pip install jupyter nbconvert
      - name: Replace pyribs installation with local installation
        run: |
          sed -ri 's/(\%pip install .*)ribs(.*)/\1.\2/g' ${{ matrix.tutorial }}
      - name: Test Tutorials
        run: bash tests/tutorials.sh ${{ matrix.tutorial }}
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.10"
      - name: Install deps
        run: pip install .[all,dev]
      - name: Build docs
        run: make docs
  deploy:
    runs-on: ubuntu-latest
    needs:
      [
        pre-commit,
        test,
        visualize_qdax,
        coverage,
        benchmarks,
        examples,
        tutorials,
      ]
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          pip install -e .
          pip install -e .[dev]
      - name: Publish
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          make release
